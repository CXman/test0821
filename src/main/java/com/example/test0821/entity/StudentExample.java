package com.example.test0821.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class StudentExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table wn_student
     *
     * @mbg.generated Mon Aug 24 22:56:34 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table wn_student
     *
     * @mbg.generated Mon Aug 24 22:56:34 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table wn_student
     *
     * @mbg.generated Mon Aug 24 22:56:34 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wn_student
     *
     * @mbg.generated Mon Aug 24 22:56:34 CST 2020
     */
    public StudentExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wn_student
     *
     * @mbg.generated Mon Aug 24 22:56:34 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wn_student
     *
     * @mbg.generated Mon Aug 24 22:56:34 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wn_student
     *
     * @mbg.generated Mon Aug 24 22:56:34 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wn_student
     *
     * @mbg.generated Mon Aug 24 22:56:34 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wn_student
     *
     * @mbg.generated Mon Aug 24 22:56:34 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wn_student
     *
     * @mbg.generated Mon Aug 24 22:56:34 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wn_student
     *
     * @mbg.generated Mon Aug 24 22:56:34 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wn_student
     *
     * @mbg.generated Mon Aug 24 22:56:34 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wn_student
     *
     * @mbg.generated Mon Aug 24 22:56:34 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wn_student
     *
     * @mbg.generated Mon Aug 24 22:56:34 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wn_student
     *
     * @mbg.generated Mon Aug 24 22:56:34 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andStudentIdIsNull() {
            addCriterion("student_id is null");
            return (Criteria) this;
        }

        public Criteria andStudentIdIsNotNull() {
            addCriterion("student_id is not null");
            return (Criteria) this;
        }

        public Criteria andStudentIdEqualTo(Integer value) {
            addCriterion("student_id =", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotEqualTo(Integer value) {
            addCriterion("student_id <>", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdGreaterThan(Integer value) {
            addCriterion("student_id >", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("student_id >=", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLessThan(Integer value) {
            addCriterion("student_id <", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLessThanOrEqualTo(Integer value) {
            addCriterion("student_id <=", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdIn(List<Integer> values) {
            addCriterion("student_id in", values, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotIn(List<Integer> values) {
            addCriterion("student_id not in", values, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdBetween(Integer value1, Integer value2) {
            addCriterion("student_id between", value1, value2, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotBetween(Integer value1, Integer value2) {
            addCriterion("student_id not between", value1, value2, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentNameIsNull() {
            addCriterion("student_name is null");
            return (Criteria) this;
        }

        public Criteria andStudentNameIsNotNull() {
            addCriterion("student_name is not null");
            return (Criteria) this;
        }

        public Criteria andStudentNameEqualTo(String value) {
            addCriterion("student_name =", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameNotEqualTo(String value) {
            addCriterion("student_name <>", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameGreaterThan(String value) {
            addCriterion("student_name >", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameGreaterThanOrEqualTo(String value) {
            addCriterion("student_name >=", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameLessThan(String value) {
            addCriterion("student_name <", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameLessThanOrEqualTo(String value) {
            addCriterion("student_name <=", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameLike(String value) {
            addCriterion("student_name like", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameNotLike(String value) {
            addCriterion("student_name not like", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameIn(List<String> values) {
            addCriterion("student_name in", values, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameNotIn(List<String> values) {
            addCriterion("student_name not in", values, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameBetween(String value1, String value2) {
            addCriterion("student_name between", value1, value2, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameNotBetween(String value1, String value2) {
            addCriterion("student_name not between", value1, value2, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentBirthIsNull() {
            addCriterion("student_birth is null");
            return (Criteria) this;
        }

        public Criteria andStudentBirthIsNotNull() {
            addCriterion("student_birth is not null");
            return (Criteria) this;
        }

        public Criteria andStudentBirthEqualTo(String value) {
            addCriterion("student_birth =", value, "studentBirth");
            return (Criteria) this;
        }

        public Criteria andStudentBirthNotEqualTo(String value) {
            addCriterion("student_birth <>", value, "studentBirth");
            return (Criteria) this;
        }

        public Criteria andStudentBirthGreaterThan(String value) {
            addCriterion("student_birth >", value, "studentBirth");
            return (Criteria) this;
        }

        public Criteria andStudentBirthGreaterThanOrEqualTo(String value) {
            addCriterion("student_birth >=", value, "studentBirth");
            return (Criteria) this;
        }

        public Criteria andStudentBirthLessThan(String value) {
            addCriterion("student_birth <", value, "studentBirth");
            return (Criteria) this;
        }

        public Criteria andStudentBirthLessThanOrEqualTo(String value) {
            addCriterion("student_birth <=", value, "studentBirth");
            return (Criteria) this;
        }

        public Criteria andStudentBirthLike(String value) {
            addCriterion("student_birth like", value, "studentBirth");
            return (Criteria) this;
        }

        public Criteria andStudentBirthNotLike(String value) {
            addCriterion("student_birth not like", value, "studentBirth");
            return (Criteria) this;
        }

        public Criteria andStudentBirthIn(List<String> values) {
            addCriterion("student_birth in", values, "studentBirth");
            return (Criteria) this;
        }

        public Criteria andStudentBirthNotIn(List<String> values) {
            addCriterion("student_birth not in", values, "studentBirth");
            return (Criteria) this;
        }

        public Criteria andStudentBirthBetween(String value1, String value2) {
            addCriterion("student_birth between", value1, value2, "studentBirth");
            return (Criteria) this;
        }

        public Criteria andStudentBirthNotBetween(String value1, String value2) {
            addCriterion("student_birth not between", value1, value2, "studentBirth");
            return (Criteria) this;
        }

        public Criteria andStudentStatusIsNull() {
            addCriterion("student_status is null");
            return (Criteria) this;
        }

        public Criteria andStudentStatusIsNotNull() {
            addCriterion("student_status is not null");
            return (Criteria) this;
        }

        public Criteria andStudentStatusEqualTo(Integer value) {
            addCriterion("student_status =", value, "studentStatus");
            return (Criteria) this;
        }

        public Criteria andStudentStatusNotEqualTo(Integer value) {
            addCriterion("student_status <>", value, "studentStatus");
            return (Criteria) this;
        }

        public Criteria andStudentStatusGreaterThan(Integer value) {
            addCriterion("student_status >", value, "studentStatus");
            return (Criteria) this;
        }

        public Criteria andStudentStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("student_status >=", value, "studentStatus");
            return (Criteria) this;
        }

        public Criteria andStudentStatusLessThan(Integer value) {
            addCriterion("student_status <", value, "studentStatus");
            return (Criteria) this;
        }

        public Criteria andStudentStatusLessThanOrEqualTo(Integer value) {
            addCriterion("student_status <=", value, "studentStatus");
            return (Criteria) this;
        }

        public Criteria andStudentStatusIn(List<Integer> values) {
            addCriterion("student_status in", values, "studentStatus");
            return (Criteria) this;
        }

        public Criteria andStudentStatusNotIn(List<Integer> values) {
            addCriterion("student_status not in", values, "studentStatus");
            return (Criteria) this;
        }

        public Criteria andStudentStatusBetween(Integer value1, Integer value2) {
            addCriterion("student_status between", value1, value2, "studentStatus");
            return (Criteria) this;
        }

        public Criteria andStudentStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("student_status not between", value1, value2, "studentStatus");
            return (Criteria) this;
        }

        public Criteria andStudentRegistTimeIsNull() {
            addCriterion("student_regist_time is null");
            return (Criteria) this;
        }

        public Criteria andStudentRegistTimeIsNotNull() {
            addCriterion("student_regist_time is not null");
            return (Criteria) this;
        }

        public Criteria andStudentRegistTimeEqualTo(Date value) {
            addCriterionForJDBCDate("student_regist_time =", value, "studentRegistTime");
            return (Criteria) this;
        }

        public Criteria andStudentRegistTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("student_regist_time <>", value, "studentRegistTime");
            return (Criteria) this;
        }

        public Criteria andStudentRegistTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("student_regist_time >", value, "studentRegistTime");
            return (Criteria) this;
        }

        public Criteria andStudentRegistTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("student_regist_time >=", value, "studentRegistTime");
            return (Criteria) this;
        }

        public Criteria andStudentRegistTimeLessThan(Date value) {
            addCriterionForJDBCDate("student_regist_time <", value, "studentRegistTime");
            return (Criteria) this;
        }

        public Criteria andStudentRegistTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("student_regist_time <=", value, "studentRegistTime");
            return (Criteria) this;
        }

        public Criteria andStudentRegistTimeIn(List<Date> values) {
            addCriterionForJDBCDate("student_regist_time in", values, "studentRegistTime");
            return (Criteria) this;
        }

        public Criteria andStudentRegistTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("student_regist_time not in", values, "studentRegistTime");
            return (Criteria) this;
        }

        public Criteria andStudentRegistTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("student_regist_time between", value1, value2, "studentRegistTime");
            return (Criteria) this;
        }

        public Criteria andStudentRegistTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("student_regist_time not between", value1, value2, "studentRegistTime");
            return (Criteria) this;
        }

        public Criteria andStudentSchoolIsNull() {
            addCriterion("student_school is null");
            return (Criteria) this;
        }

        public Criteria andStudentSchoolIsNotNull() {
            addCriterion("student_school is not null");
            return (Criteria) this;
        }

        public Criteria andStudentSchoolEqualTo(String value) {
            addCriterion("student_school =", value, "studentSchool");
            return (Criteria) this;
        }

        public Criteria andStudentSchoolNotEqualTo(String value) {
            addCriterion("student_school <>", value, "studentSchool");
            return (Criteria) this;
        }

        public Criteria andStudentSchoolGreaterThan(String value) {
            addCriterion("student_school >", value, "studentSchool");
            return (Criteria) this;
        }

        public Criteria andStudentSchoolGreaterThanOrEqualTo(String value) {
            addCriterion("student_school >=", value, "studentSchool");
            return (Criteria) this;
        }

        public Criteria andStudentSchoolLessThan(String value) {
            addCriterion("student_school <", value, "studentSchool");
            return (Criteria) this;
        }

        public Criteria andStudentSchoolLessThanOrEqualTo(String value) {
            addCriterion("student_school <=", value, "studentSchool");
            return (Criteria) this;
        }

        public Criteria andStudentSchoolLike(String value) {
            addCriterion("student_school like", value, "studentSchool");
            return (Criteria) this;
        }

        public Criteria andStudentSchoolNotLike(String value) {
            addCriterion("student_school not like", value, "studentSchool");
            return (Criteria) this;
        }

        public Criteria andStudentSchoolIn(List<String> values) {
            addCriterion("student_school in", values, "studentSchool");
            return (Criteria) this;
        }

        public Criteria andStudentSchoolNotIn(List<String> values) {
            addCriterion("student_school not in", values, "studentSchool");
            return (Criteria) this;
        }

        public Criteria andStudentSchoolBetween(String value1, String value2) {
            addCriterion("student_school between", value1, value2, "studentSchool");
            return (Criteria) this;
        }

        public Criteria andStudentSchoolNotBetween(String value1, String value2) {
            addCriterion("student_school not between", value1, value2, "studentSchool");
            return (Criteria) this;
        }

        public Criteria andStudentMajorIsNull() {
            addCriterion("student_major is null");
            return (Criteria) this;
        }

        public Criteria andStudentMajorIsNotNull() {
            addCriterion("student_major is not null");
            return (Criteria) this;
        }

        public Criteria andStudentMajorEqualTo(String value) {
            addCriterion("student_major =", value, "studentMajor");
            return (Criteria) this;
        }

        public Criteria andStudentMajorNotEqualTo(String value) {
            addCriterion("student_major <>", value, "studentMajor");
            return (Criteria) this;
        }

        public Criteria andStudentMajorGreaterThan(String value) {
            addCriterion("student_major >", value, "studentMajor");
            return (Criteria) this;
        }

        public Criteria andStudentMajorGreaterThanOrEqualTo(String value) {
            addCriterion("student_major >=", value, "studentMajor");
            return (Criteria) this;
        }

        public Criteria andStudentMajorLessThan(String value) {
            addCriterion("student_major <", value, "studentMajor");
            return (Criteria) this;
        }

        public Criteria andStudentMajorLessThanOrEqualTo(String value) {
            addCriterion("student_major <=", value, "studentMajor");
            return (Criteria) this;
        }

        public Criteria andStudentMajorLike(String value) {
            addCriterion("student_major like", value, "studentMajor");
            return (Criteria) this;
        }

        public Criteria andStudentMajorNotLike(String value) {
            addCriterion("student_major not like", value, "studentMajor");
            return (Criteria) this;
        }

        public Criteria andStudentMajorIn(List<String> values) {
            addCriterion("student_major in", values, "studentMajor");
            return (Criteria) this;
        }

        public Criteria andStudentMajorNotIn(List<String> values) {
            addCriterion("student_major not in", values, "studentMajor");
            return (Criteria) this;
        }

        public Criteria andStudentMajorBetween(String value1, String value2) {
            addCriterion("student_major between", value1, value2, "studentMajor");
            return (Criteria) this;
        }

        public Criteria andStudentMajorNotBetween(String value1, String value2) {
            addCriterion("student_major not between", value1, value2, "studentMajor");
            return (Criteria) this;
        }

        public Criteria andStudentGraduateTimeIsNull() {
            addCriterion("student_graduate_time is null");
            return (Criteria) this;
        }

        public Criteria andStudentGraduateTimeIsNotNull() {
            addCriterion("student_graduate_time is not null");
            return (Criteria) this;
        }

        public Criteria andStudentGraduateTimeEqualTo(Date value) {
            addCriterionForJDBCDate("student_graduate_time =", value, "studentGraduateTime");
            return (Criteria) this;
        }

        public Criteria andStudentGraduateTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("student_graduate_time <>", value, "studentGraduateTime");
            return (Criteria) this;
        }

        public Criteria andStudentGraduateTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("student_graduate_time >", value, "studentGraduateTime");
            return (Criteria) this;
        }

        public Criteria andStudentGraduateTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("student_graduate_time >=", value, "studentGraduateTime");
            return (Criteria) this;
        }

        public Criteria andStudentGraduateTimeLessThan(Date value) {
            addCriterionForJDBCDate("student_graduate_time <", value, "studentGraduateTime");
            return (Criteria) this;
        }

        public Criteria andStudentGraduateTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("student_graduate_time <=", value, "studentGraduateTime");
            return (Criteria) this;
        }

        public Criteria andStudentGraduateTimeIn(List<Date> values) {
            addCriterionForJDBCDate("student_graduate_time in", values, "studentGraduateTime");
            return (Criteria) this;
        }

        public Criteria andStudentGraduateTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("student_graduate_time not in", values, "studentGraduateTime");
            return (Criteria) this;
        }

        public Criteria andStudentGraduateTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("student_graduate_time between", value1, value2, "studentGraduateTime");
            return (Criteria) this;
        }

        public Criteria andStudentGraduateTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("student_graduate_time not between", value1, value2, "studentGraduateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wn_student
     *
     * @mbg.generated do_not_delete_during_merge Mon Aug 24 22:56:34 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wn_student
     *
     * @mbg.generated Mon Aug 24 22:56:34 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}